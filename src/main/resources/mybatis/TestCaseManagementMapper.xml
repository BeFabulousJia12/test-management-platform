<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.test.collectionService.TestPlatformServer.mapper.TestCaseManagementMapper">

    <sql id="Column_list">
        test_name,
        feature_name,
        test_method_name,
        test_steps,
        user
    </sql>

    <sql id="Column_list_TestResults">
        test_name,
        test_method_name,
        test_status,
        timestamp,
        failed_reason,
        user
    </sql>

    <sql id="Column_list_TestResultSummary">
        test_name,
        passed,
        failed,
        ignored,
        duration,
        timestamp,
        user
    </sql>

    <sql id="Column_list_AccountInfo">
        username,
        password
    </sql>

    <resultMap id="ListTest" type="com.test.collectionService.TestPlatformServer.model.TestCaseInfo" >
        <id  column="test_name" property="testName" />
        <result  column="feature_name" property="featureName" />
        <result column="test_method_name" property="testMethod" />
        <result column="test_steps" property="testSteps" />
        <result column="user" property="user"/>
    </resultMap>

    <resultMap id="ListTestResults" type="com.test.collectionService.TestPlatformServer.model.TestResults" >
        <id  column="test_name" property="testName" />
        <result  column="test_method_name" property="testMethodName" />
        <result column="test_status" property="testStatus" />
        <result column="timestamp" property="timestamp" />
        <result column="failed_reason" property="failedReason"/>
        <result column="user" property="user"/>
    </resultMap>

    <resultMap id="ListTestResultSummary" type="com.test.collectionService.TestPlatformServer.model.TestResultSummary" >
        <id  column="test_name" property="testName" />
        <result  column="passed" property="passed" />
        <result column="failed" property="failed" />
        <result column="ignored" property="ignored"/>
        <result column="duration" property="duration"/>
        <result column="timestamp" property="timestamp" />
        <result column="user" property="user"/>
    </resultMap>

    <resultMap id="ListTestName" type="com.test.collectionService.TestPlatformServer.model.TestName" >
        <id  column="test_name" property="testName" />
    </resultMap>

    <select id="getAllTestCaseInfoByUser" resultMap="ListTest">
        SELECT
        <include refid="Column_list" />
        FROM test_cases WHERE test_name =#{testName} AND user =#{user}
    </select>
    <select id="getAllTestCaseInfo" resultMap="ListTest">
        SELECT
        <include refid="Column_list" />
        FROM test_cases WHERE test_name =#{testName}
    </select>


    <select id="getTestResultsByUser" resultMap="ListTestResults">
        SELECT
        <include refid="Column_list_TestResults" />
        FROM test_results WHERE test_name =#{testName} AND timestamp = #{timestamp} AND user=#{user}
    </select>
    <select id="getTestResults" resultMap="ListTestResults">
        SELECT
        <include refid="Column_list_TestResults" />
        FROM test_results WHERE test_name =#{testName} AND timestamp = #{timestamp}
    </select>

    <select id="getFailedTestResultsByUser" resultMap="ListTestResults">
        SELECT
        <include refid="Column_list_TestResults" />
        FROM test_results WHERE test_status=2 AND test_name =#{testName} AND timestamp = #{timestamp} AND user=#{user}
    </select>
    <select id="getFailedTestResults" resultMap="ListTestResults">
        SELECT
        <include refid="Column_list_TestResults" />
        FROM test_results WHERE test_status=2 AND test_name =#{testName} AND timestamp = #{timestamp}
    </select>

    <select id="getLatestTestResultSummaryByUser" resultMap="ListTestResultSummary">
        SELECT
        m1.* from test_result_summary m1 left join test_result_summary m2 on (m1.test_name = m2.test_name and m1.id &lt;m2.id) where m2.id is null AND m1.user=#{user} order by `timestamp` desc
    </select>
    <select id="getLatestTestResultSummary" resultMap="ListTestResultSummary">
        SELECT
        m1.* from test_result_summary m1 left join test_result_summary m2 on (m1.test_name = m2.test_name and m1.id &lt;m2.id) where m2.id is null order by `timestamp` desc
    </select>

    <select id="getLatestTestResultSummaryByTestnameByUser" resultMap="ListTestResultSummary">
        SELECT
        m1.* from test_result_summary m1 WHERE test_name=#{testName} AND user=#{user} order by `timestamp` desc limit 1
    </select>
    <select id="getLatestTestResultSummaryByTestname" resultMap="ListTestResultSummary">
        SELECT
        m1.* from test_result_summary m1 WHERE test_name=#{testName} order by `timestamp` desc limit 1
    </select>

    <select id="getTestnameListByUser" resultMap="ListTestName">
        SELECT distinct test_name FROM test_result_summary WHERE user=#{user}
    </select>
    <select id="getTestnameList" resultMap="ListTestName">
        SELECT distinct test_name FROM test_result_summary
    </select>


    <select id="getHistoryFailedTestSummaryByUser" resultMap="ListTestResultSummary">
        SELECT * FROM test_result_summary WHERE test_name=#{testName} AND user=#{user} AND timestamp = #{timestamp}
    </select>
    <select id="getHistoryLatestTestResultSummary" resultMap="ListTestResultSummary">
        SELECT * FROM test_result_summary WHERE test_name=#{testName} AND timestamp = #{timestamp}
    </select>

    <select id="getHistoryTestResultSummaryListByTestnameByUser" resultMap="ListTestResultSummary">
        SELECT * FROM test_result_summary WHERE test_name=#{testName} AND user=#{user} AND timestamp>= #{from} and timestamp &lt;= #{to} order by timestamp desc limit #{limit}
    </select>
    <select id="getHistoryTestResultSummaryListByTestname" resultMap="ListTestResultSummary">
        SELECT * FROM test_result_summary WHERE test_name=#{testName} AND timestamp>= #{from} and timestamp &lt;= #{to} order by timestamp desc limit #{limit}
    </select>


    <select id="insertAccountInfo" parameterType="com.test.collectionService.TestPlatformServer.model.AccountInfo">
        INSERT INTO account_info (<include refid="Column_list_AccountInfo" />)
        VALUES (#{username},#{password})
    </select>

    <select id="insertTestCase" parameterType="com.test.collectionService.TestPlatformServer.model.TestCaseInfo">
        INSERT INTO test_cases (<include refid="Column_list" />)
        VALUES (#{testName},#{featureName},#{testMethod},#{testSteps},#{user})
    </select>

    <select id="insertTestCaseByBatch" parameterType="com.test.collectionService.TestPlatformServer.model.TestCaseInfo">
        INSERT INTO test_cases (<include refid="Column_list" />)
        VALUES
        <foreach collection="list" item="testCaseInfo" separator=",">
            (#{testCaseInfo.testName},#{testCaseInfo.featureName},#{testCaseInfo.testMethod},#{testCaseInfo.testSteps},#{testCaseInfo.user})
        </foreach>
    </select>

    <delete id="deleteTestCaseByTestNameByUser" parameterType="java.lang.String">
        DELETE FROM test_cases WHERE test_name = #{name} AND user=#{user}
    </delete>

    <select id="insertTestResultsByBatch" parameterType="com.test.collectionService.TestPlatformServer.model.TestResults">
        INSERT INTO test_results (<include refid="Column_list_TestResults" />)
        VALUES
        <foreach collection="list" item="testResult" separator=",">
            (#{testResult.testName},#{testResult.testMethodName},#{testResult.testStatus},#{testResult.timestamp},#{testResult.failedReason},#{testResult.user})
        </foreach>
    </select>

    <select id="insertTestResultSummary" parameterType="com.test.collectionService.TestPlatformServer.model.TestResultSummary">
        INSERT INTO test_result_summary (<include refid="Column_list_TestResultSummary" />)
        VALUES (#{testName},#{passed},#{failed},#{ignored},#{duration},#{timestamp},#{user})
    </select>

    <select id="getAccountInfo" resultType="int">
        SELECT COUNT(*)
        <include refid="Column_list_AccountInfo" />
        FROM account_info WHERE username = #{username} AND password = #{password}
    </select>
    <select id="getAccountNameWhenRegisterNewAccount" resultType="int">
        SELECT COUNT(*)
        <include refid="Column_list_AccountInfo" />
        FROM account_info WHERE username = #{username}
    </select>


</mapper>